openapi: 3.0.0
info:
    title: Consul mesh
    description: Consul APIs for interacting with the mesh resource kinds at version v1alpha1
    version: v1alpha1
paths:
    /mesh/v1alpha1/ComputedRoutes:
        get:
            summary: List mesh.v1alpha1.ComputedRoutes resources
            operationId: list-ComputedRoutes
            parameters:
                - $ref: '#/components/parameters/namespace'
                - $ref: '#/components/parameters/ns'
                - $ref: '#/components/parameters/partition'
                - $ref: '#/components/parameters/peer'
                - $ref: '#/components/parameters/consistent'
                - $ref: '#/components/parameters/name_prefix'
            responses:
                "200":
                    description: The listing was successful and the body contains the array of results.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        data:
                                            $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedRoutes'
                                        generation:
                                            type: string
                                            description: |
                                                // Generation is incremented whenever the resource's content (i.e. not its
                                                // status) is modified. You can think of it as being the "user version".
                                                //
                                                // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                                // can treat its timestamp component as the resource's modification time.
                                        id:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // ID uniquely identifies the resource.
                                        metadata:
                                            type: object
                                            additionalProperties:
                                                type: string
                                            description: |
                                                // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                        owner:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // Owner (optionally) describes which resource "owns" this resource, it is
                                                // immutable and can only be set on resource creation. Owned resources will
                                                // be automatically deleted when their owner is deleted.
                                        status:
                                            type: object
                                            additionalProperties:
                                                $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                            description: |
                                                // Status is used by controllers to communicate the result of attempting to
                                                // reconcile and apply the resource (e.g. surface semantic validation errors)
                                                // with users and other controllers. Each status is identified by a unique key
                                                // and should only ever be updated by one controller.
                                                //
                                                // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                                // so via the Write endpoint will result in an InvalidArgument error code.
                                        version:
                                            type: string
                                            description: |
                                                // Version is the low-level version identifier used by the storage backend
                                                // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                                // modified in any way, including status updates.
                                                //
                                                // When calling the Write endpoint, providing a non-blank version will perform
                                                // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                                // if the given version doesn't match what is stored.
    /mesh/v1alpha1/ComputedRoutes/{name}:
        get:
            summary: Read mesh.v1alpha1.ComputedRoutes resources
            operationId: read-ComputedRoutes.
            parameters:
                - $ref: '#/components/parameters/consistent'
            responses:
                "200":
                    description: The read was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedRoutes'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        put:
            summary: Write mesh.v1alpha1.ComputedRoutes resources
            operationId: write-ComputedRoutes
            requestBody:
                description: The mesh.v1alpha1.ComputedRoutes resource to be updated.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedRoutes'
                                generation:
                                    type: string
                                    description: |
                                        // Generation is incremented whenever the resource's content (i.e. not its
                                        // status) is modified. You can think of it as being the "user version".
                                        //
                                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                        // can treat its timestamp component as the resource's modification time.
                                id:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // ID uniquely identifies the resource.
                                metadata:
                                    type: object
                                    additionalProperties:
                                        type: string
                                    description: |
                                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                owner:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // Owner (optionally) describes which resource "owns" this resource, it is
                                        // immutable and can only be set on resource creation. Owned resources will
                                        // be automatically deleted when their owner is deleted.
                                status:
                                    type: object
                                    additionalProperties:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                    description: |
                                        // Status is used by controllers to communicate the result of attempting to
                                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                                        // with users and other controllers. Each status is identified by a unique key
                                        // and should only ever be updated by one controller.
                                        //
                                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                        // so via the Write endpoint will result in an InvalidArgument error code.
                                version:
                                    type: string
                                    description: |
                                        // Version is the low-level version identifier used by the storage backend
                                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                        // modified in any way, including status updates.
                                        //
                                        // When calling the Write endpoint, providing a non-blank version will perform
                                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                        // if the given version doesn't match what is stored.
            responses:
                "200":
                    description: The write was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedRoutes'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        delete:
            summary: Delete mesh.v1alpha1.ComputedRoutes resources
            operationId: delete-ComputedRoutes
            responses:
                "200":
                    description: The delete was successful and the body contains the result.
        parameters:
            - $ref: '#/components/parameters/peer'
            - $ref: '#/components/parameters/name'
            - $ref: '#/components/parameters/namespace'
            - $ref: '#/components/parameters/ns'
            - $ref: '#/components/parameters/partition'
    /mesh/v1alpha1/DestinationPolicy:
        get:
            summary: List mesh.v1alpha1.DestinationPolicy resources
            operationId: list-DestinationPolicy
            parameters:
                - $ref: '#/components/parameters/namespace'
                - $ref: '#/components/parameters/ns'
                - $ref: '#/components/parameters/partition'
                - $ref: '#/components/parameters/peer'
                - $ref: '#/components/parameters/consistent'
                - $ref: '#/components/parameters/name_prefix'
            responses:
                "200":
                    description: The listing was successful and the body contains the array of results.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        data:
                                            $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.DestinationPolicy'
                                        generation:
                                            type: string
                                            description: |
                                                // Generation is incremented whenever the resource's content (i.e. not its
                                                // status) is modified. You can think of it as being the "user version".
                                                //
                                                // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                                // can treat its timestamp component as the resource's modification time.
                                        id:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // ID uniquely identifies the resource.
                                        metadata:
                                            type: object
                                            additionalProperties:
                                                type: string
                                            description: |
                                                // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                        owner:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // Owner (optionally) describes which resource "owns" this resource, it is
                                                // immutable and can only be set on resource creation. Owned resources will
                                                // be automatically deleted when their owner is deleted.
                                        status:
                                            type: object
                                            additionalProperties:
                                                $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                            description: |
                                                // Status is used by controllers to communicate the result of attempting to
                                                // reconcile and apply the resource (e.g. surface semantic validation errors)
                                                // with users and other controllers. Each status is identified by a unique key
                                                // and should only ever be updated by one controller.
                                                //
                                                // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                                // so via the Write endpoint will result in an InvalidArgument error code.
                                        version:
                                            type: string
                                            description: |
                                                // Version is the low-level version identifier used by the storage backend
                                                // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                                // modified in any way, including status updates.
                                                //
                                                // When calling the Write endpoint, providing a non-blank version will perform
                                                // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                                // if the given version doesn't match what is stored.
    /mesh/v1alpha1/DestinationPolicy/{name}:
        get:
            summary: Read mesh.v1alpha1.DestinationPolicy resources
            operationId: read-DestinationPolicy.
            parameters:
                - $ref: '#/components/parameters/consistent'
            responses:
                "200":
                    description: The read was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.DestinationPolicy'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        put:
            summary: Write mesh.v1alpha1.DestinationPolicy resources
            operationId: write-DestinationPolicy
            requestBody:
                description: The mesh.v1alpha1.DestinationPolicy resource to be updated.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.DestinationPolicy'
                                generation:
                                    type: string
                                    description: |
                                        // Generation is incremented whenever the resource's content (i.e. not its
                                        // status) is modified. You can think of it as being the "user version".
                                        //
                                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                        // can treat its timestamp component as the resource's modification time.
                                id:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // ID uniquely identifies the resource.
                                metadata:
                                    type: object
                                    additionalProperties:
                                        type: string
                                    description: |
                                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                owner:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // Owner (optionally) describes which resource "owns" this resource, it is
                                        // immutable and can only be set on resource creation. Owned resources will
                                        // be automatically deleted when their owner is deleted.
                                status:
                                    type: object
                                    additionalProperties:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                    description: |
                                        // Status is used by controllers to communicate the result of attempting to
                                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                                        // with users and other controllers. Each status is identified by a unique key
                                        // and should only ever be updated by one controller.
                                        //
                                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                        // so via the Write endpoint will result in an InvalidArgument error code.
                                version:
                                    type: string
                                    description: |
                                        // Version is the low-level version identifier used by the storage backend
                                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                        // modified in any way, including status updates.
                                        //
                                        // When calling the Write endpoint, providing a non-blank version will perform
                                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                        // if the given version doesn't match what is stored.
            responses:
                "200":
                    description: The write was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.DestinationPolicy'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        delete:
            summary: Delete mesh.v1alpha1.DestinationPolicy resources
            operationId: delete-DestinationPolicy
            responses:
                "200":
                    description: The delete was successful and the body contains the result.
        parameters:
            - $ref: '#/components/parameters/peer'
            - $ref: '#/components/parameters/name'
            - $ref: '#/components/parameters/namespace'
            - $ref: '#/components/parameters/ns'
            - $ref: '#/components/parameters/partition'
    /mesh/v1alpha1/GRPCRoute:
        get:
            summary: List mesh.v1alpha1.GRPCRoute resources
            operationId: list-GRPCRoute
            parameters:
                - $ref: '#/components/parameters/namespace'
                - $ref: '#/components/parameters/ns'
                - $ref: '#/components/parameters/partition'
                - $ref: '#/components/parameters/peer'
                - $ref: '#/components/parameters/consistent'
                - $ref: '#/components/parameters/name_prefix'
            responses:
                "200":
                    description: The listing was successful and the body contains the array of results.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        data:
                                            $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRoute'
                                        generation:
                                            type: string
                                            description: |
                                                // Generation is incremented whenever the resource's content (i.e. not its
                                                // status) is modified. You can think of it as being the "user version".
                                                //
                                                // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                                // can treat its timestamp component as the resource's modification time.
                                        id:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // ID uniquely identifies the resource.
                                        metadata:
                                            type: object
                                            additionalProperties:
                                                type: string
                                            description: |
                                                // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                        owner:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // Owner (optionally) describes which resource "owns" this resource, it is
                                                // immutable and can only be set on resource creation. Owned resources will
                                                // be automatically deleted when their owner is deleted.
                                        status:
                                            type: object
                                            additionalProperties:
                                                $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                            description: |
                                                // Status is used by controllers to communicate the result of attempting to
                                                // reconcile and apply the resource (e.g. surface semantic validation errors)
                                                // with users and other controllers. Each status is identified by a unique key
                                                // and should only ever be updated by one controller.
                                                //
                                                // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                                // so via the Write endpoint will result in an InvalidArgument error code.
                                        version:
                                            type: string
                                            description: |
                                                // Version is the low-level version identifier used by the storage backend
                                                // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                                // modified in any way, including status updates.
                                                //
                                                // When calling the Write endpoint, providing a non-blank version will perform
                                                // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                                // if the given version doesn't match what is stored.
    /mesh/v1alpha1/GRPCRoute/{name}:
        get:
            summary: Read mesh.v1alpha1.GRPCRoute resources
            operationId: read-GRPCRoute.
            parameters:
                - $ref: '#/components/parameters/consistent'
            responses:
                "200":
                    description: The read was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRoute'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        put:
            summary: Write mesh.v1alpha1.GRPCRoute resources
            operationId: write-GRPCRoute
            requestBody:
                description: The mesh.v1alpha1.GRPCRoute resource to be updated.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRoute'
                                generation:
                                    type: string
                                    description: |
                                        // Generation is incremented whenever the resource's content (i.e. not its
                                        // status) is modified. You can think of it as being the "user version".
                                        //
                                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                        // can treat its timestamp component as the resource's modification time.
                                id:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // ID uniquely identifies the resource.
                                metadata:
                                    type: object
                                    additionalProperties:
                                        type: string
                                    description: |
                                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                owner:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // Owner (optionally) describes which resource "owns" this resource, it is
                                        // immutable and can only be set on resource creation. Owned resources will
                                        // be automatically deleted when their owner is deleted.
                                status:
                                    type: object
                                    additionalProperties:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                    description: |
                                        // Status is used by controllers to communicate the result of attempting to
                                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                                        // with users and other controllers. Each status is identified by a unique key
                                        // and should only ever be updated by one controller.
                                        //
                                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                        // so via the Write endpoint will result in an InvalidArgument error code.
                                version:
                                    type: string
                                    description: |
                                        // Version is the low-level version identifier used by the storage backend
                                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                        // modified in any way, including status updates.
                                        //
                                        // When calling the Write endpoint, providing a non-blank version will perform
                                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                        // if the given version doesn't match what is stored.
            responses:
                "200":
                    description: The write was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRoute'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        delete:
            summary: Delete mesh.v1alpha1.GRPCRoute resources
            operationId: delete-GRPCRoute
            responses:
                "200":
                    description: The delete was successful and the body contains the result.
        parameters:
            - $ref: '#/components/parameters/peer'
            - $ref: '#/components/parameters/name'
            - $ref: '#/components/parameters/namespace'
            - $ref: '#/components/parameters/ns'
            - $ref: '#/components/parameters/partition'
    /mesh/v1alpha1/ProxyStateTemplate:
        get:
            summary: List mesh.v1alpha1.ProxyStateTemplate resources
            operationId: list-ProxyStateTemplate
            parameters:
                - $ref: '#/components/parameters/namespace'
                - $ref: '#/components/parameters/ns'
                - $ref: '#/components/parameters/partition'
                - $ref: '#/components/parameters/peer'
                - $ref: '#/components/parameters/consistent'
                - $ref: '#/components/parameters/name_prefix'
            responses:
                "200":
                    description: The listing was successful and the body contains the array of results.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        data:
                                            $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ProxyStateTemplate'
                                        generation:
                                            type: string
                                            description: |
                                                // Generation is incremented whenever the resource's content (i.e. not its
                                                // status) is modified. You can think of it as being the "user version".
                                                //
                                                // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                                // can treat its timestamp component as the resource's modification time.
                                        id:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // ID uniquely identifies the resource.
                                        metadata:
                                            type: object
                                            additionalProperties:
                                                type: string
                                            description: |
                                                // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                        owner:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // Owner (optionally) describes which resource "owns" this resource, it is
                                                // immutable and can only be set on resource creation. Owned resources will
                                                // be automatically deleted when their owner is deleted.
                                        status:
                                            type: object
                                            additionalProperties:
                                                $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                            description: |
                                                // Status is used by controllers to communicate the result of attempting to
                                                // reconcile and apply the resource (e.g. surface semantic validation errors)
                                                // with users and other controllers. Each status is identified by a unique key
                                                // and should only ever be updated by one controller.
                                                //
                                                // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                                // so via the Write endpoint will result in an InvalidArgument error code.
                                        version:
                                            type: string
                                            description: |
                                                // Version is the low-level version identifier used by the storage backend
                                                // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                                // modified in any way, including status updates.
                                                //
                                                // When calling the Write endpoint, providing a non-blank version will perform
                                                // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                                // if the given version doesn't match what is stored.
    /mesh/v1alpha1/ProxyStateTemplate/{name}:
        get:
            summary: Read mesh.v1alpha1.ProxyStateTemplate resources
            operationId: read-ProxyStateTemplate.
            parameters:
                - $ref: '#/components/parameters/consistent'
            responses:
                "200":
                    description: The read was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ProxyStateTemplate'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        put:
            summary: Write mesh.v1alpha1.ProxyStateTemplate resources
            operationId: write-ProxyStateTemplate
            requestBody:
                description: The mesh.v1alpha1.ProxyStateTemplate resource to be updated.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ProxyStateTemplate'
                                generation:
                                    type: string
                                    description: |
                                        // Generation is incremented whenever the resource's content (i.e. not its
                                        // status) is modified. You can think of it as being the "user version".
                                        //
                                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                        // can treat its timestamp component as the resource's modification time.
                                id:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // ID uniquely identifies the resource.
                                metadata:
                                    type: object
                                    additionalProperties:
                                        type: string
                                    description: |
                                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                owner:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // Owner (optionally) describes which resource "owns" this resource, it is
                                        // immutable and can only be set on resource creation. Owned resources will
                                        // be automatically deleted when their owner is deleted.
                                status:
                                    type: object
                                    additionalProperties:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                    description: |
                                        // Status is used by controllers to communicate the result of attempting to
                                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                                        // with users and other controllers. Each status is identified by a unique key
                                        // and should only ever be updated by one controller.
                                        //
                                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                        // so via the Write endpoint will result in an InvalidArgument error code.
                                version:
                                    type: string
                                    description: |
                                        // Version is the low-level version identifier used by the storage backend
                                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                        // modified in any way, including status updates.
                                        //
                                        // When calling the Write endpoint, providing a non-blank version will perform
                                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                        // if the given version doesn't match what is stored.
            responses:
                "200":
                    description: The write was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ProxyStateTemplate'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        delete:
            summary: Delete mesh.v1alpha1.ProxyStateTemplate resources
            operationId: delete-ProxyStateTemplate
            responses:
                "200":
                    description: The delete was successful and the body contains the result.
        parameters:
            - $ref: '#/components/parameters/peer'
            - $ref: '#/components/parameters/name'
            - $ref: '#/components/parameters/namespace'
            - $ref: '#/components/parameters/ns'
            - $ref: '#/components/parameters/partition'
    /mesh/v1alpha1/TCPRoute:
        get:
            summary: List mesh.v1alpha1.TCPRoute resources
            operationId: list-TCPRoute
            parameters:
                - $ref: '#/components/parameters/namespace'
                - $ref: '#/components/parameters/ns'
                - $ref: '#/components/parameters/partition'
                - $ref: '#/components/parameters/peer'
                - $ref: '#/components/parameters/consistent'
                - $ref: '#/components/parameters/name_prefix'
            responses:
                "200":
                    description: The listing was successful and the body contains the array of results.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        data:
                                            $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.TCPRoute'
                                        generation:
                                            type: string
                                            description: |
                                                // Generation is incremented whenever the resource's content (i.e. not its
                                                // status) is modified. You can think of it as being the "user version".
                                                //
                                                // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                                // can treat its timestamp component as the resource's modification time.
                                        id:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // ID uniquely identifies the resource.
                                        metadata:
                                            type: object
                                            additionalProperties:
                                                type: string
                                            description: |
                                                // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                        owner:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // Owner (optionally) describes which resource "owns" this resource, it is
                                                // immutable and can only be set on resource creation. Owned resources will
                                                // be automatically deleted when their owner is deleted.
                                        status:
                                            type: object
                                            additionalProperties:
                                                $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                            description: |
                                                // Status is used by controllers to communicate the result of attempting to
                                                // reconcile and apply the resource (e.g. surface semantic validation errors)
                                                // with users and other controllers. Each status is identified by a unique key
                                                // and should only ever be updated by one controller.
                                                //
                                                // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                                // so via the Write endpoint will result in an InvalidArgument error code.
                                        version:
                                            type: string
                                            description: |
                                                // Version is the low-level version identifier used by the storage backend
                                                // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                                // modified in any way, including status updates.
                                                //
                                                // When calling the Write endpoint, providing a non-blank version will perform
                                                // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                                // if the given version doesn't match what is stored.
    /mesh/v1alpha1/TCPRoute/{name}:
        get:
            summary: Read mesh.v1alpha1.TCPRoute resources
            operationId: read-TCPRoute.
            parameters:
                - $ref: '#/components/parameters/consistent'
            responses:
                "200":
                    description: The read was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.TCPRoute'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        put:
            summary: Write mesh.v1alpha1.TCPRoute resources
            operationId: write-TCPRoute
            requestBody:
                description: The mesh.v1alpha1.TCPRoute resource to be updated.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.TCPRoute'
                                generation:
                                    type: string
                                    description: |
                                        // Generation is incremented whenever the resource's content (i.e. not its
                                        // status) is modified. You can think of it as being the "user version".
                                        //
                                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                        // can treat its timestamp component as the resource's modification time.
                                id:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // ID uniquely identifies the resource.
                                metadata:
                                    type: object
                                    additionalProperties:
                                        type: string
                                    description: |
                                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                owner:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // Owner (optionally) describes which resource "owns" this resource, it is
                                        // immutable and can only be set on resource creation. Owned resources will
                                        // be automatically deleted when their owner is deleted.
                                status:
                                    type: object
                                    additionalProperties:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                    description: |
                                        // Status is used by controllers to communicate the result of attempting to
                                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                                        // with users and other controllers. Each status is identified by a unique key
                                        // and should only ever be updated by one controller.
                                        //
                                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                        // so via the Write endpoint will result in an InvalidArgument error code.
                                version:
                                    type: string
                                    description: |
                                        // Version is the low-level version identifier used by the storage backend
                                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                        // modified in any way, including status updates.
                                        //
                                        // When calling the Write endpoint, providing a non-blank version will perform
                                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                        // if the given version doesn't match what is stored.
            responses:
                "200":
                    description: The write was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.TCPRoute'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        delete:
            summary: Delete mesh.v1alpha1.TCPRoute resources
            operationId: delete-TCPRoute
            responses:
                "200":
                    description: The delete was successful and the body contains the result.
        parameters:
            - $ref: '#/components/parameters/peer'
            - $ref: '#/components/parameters/name'
            - $ref: '#/components/parameters/namespace'
            - $ref: '#/components/parameters/ns'
            - $ref: '#/components/parameters/partition'
    /mesh/v1alpha1/Upstreams:
        get:
            summary: List mesh.v1alpha1.Upstreams resources
            operationId: list-Upstreams
            parameters:
                - $ref: '#/components/parameters/namespace'
                - $ref: '#/components/parameters/ns'
                - $ref: '#/components/parameters/partition'
                - $ref: '#/components/parameters/peer'
                - $ref: '#/components/parameters/consistent'
                - $ref: '#/components/parameters/name_prefix'
            responses:
                "200":
                    description: The listing was successful and the body contains the array of results.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        data:
                                            $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.Upstreams'
                                        generation:
                                            type: string
                                            description: |
                                                // Generation is incremented whenever the resource's content (i.e. not its
                                                // status) is modified. You can think of it as being the "user version".
                                                //
                                                // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                                // can treat its timestamp component as the resource's modification time.
                                        id:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // ID uniquely identifies the resource.
                                        metadata:
                                            type: object
                                            additionalProperties:
                                                type: string
                                            description: |
                                                // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                        owner:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                            description: |
                                                // Owner (optionally) describes which resource "owns" this resource, it is
                                                // immutable and can only be set on resource creation. Owned resources will
                                                // be automatically deleted when their owner is deleted.
                                        status:
                                            type: object
                                            additionalProperties:
                                                $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                            description: |
                                                // Status is used by controllers to communicate the result of attempting to
                                                // reconcile and apply the resource (e.g. surface semantic validation errors)
                                                // with users and other controllers. Each status is identified by a unique key
                                                // and should only ever be updated by one controller.
                                                //
                                                // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                                // so via the Write endpoint will result in an InvalidArgument error code.
                                        version:
                                            type: string
                                            description: |
                                                // Version is the low-level version identifier used by the storage backend
                                                // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                                // modified in any way, including status updates.
                                                //
                                                // When calling the Write endpoint, providing a non-blank version will perform
                                                // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                                // if the given version doesn't match what is stored.
    /mesh/v1alpha1/Upstreams/{name}:
        get:
            summary: Read mesh.v1alpha1.Upstreams resources
            operationId: read-Upstreams.
            parameters:
                - $ref: '#/components/parameters/consistent'
            responses:
                "200":
                    description: The read was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.Upstreams'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        put:
            summary: Write mesh.v1alpha1.Upstreams resources
            operationId: write-Upstreams
            requestBody:
                description: The mesh.v1alpha1.Upstreams resource to be updated.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.Upstreams'
                                generation:
                                    type: string
                                    description: |
                                        // Generation is incremented whenever the resource's content (i.e. not its
                                        // status) is modified. You can think of it as being the "user version".
                                        //
                                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                        // can treat its timestamp component as the resource's modification time.
                                id:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // ID uniquely identifies the resource.
                                metadata:
                                    type: object
                                    additionalProperties:
                                        type: string
                                    description: |
                                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                owner:
                                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                    description: |
                                        // Owner (optionally) describes which resource "owns" this resource, it is
                                        // immutable and can only be set on resource creation. Owned resources will
                                        // be automatically deleted when their owner is deleted.
                                status:
                                    type: object
                                    additionalProperties:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                    description: |
                                        // Status is used by controllers to communicate the result of attempting to
                                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                                        // with users and other controllers. Each status is identified by a unique key
                                        // and should only ever be updated by one controller.
                                        //
                                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                        // so via the Write endpoint will result in an InvalidArgument error code.
                                version:
                                    type: string
                                    description: |
                                        // Version is the low-level version identifier used by the storage backend
                                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                        // modified in any way, including status updates.
                                        //
                                        // When calling the Write endpoint, providing a non-blank version will perform
                                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                        // if the given version doesn't match what is stored.
            responses:
                "200":
                    description: The write was successful and the body contains the result.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.Upstreams'
                                    generation:
                                        type: string
                                        description: |
                                            // Generation is incremented whenever the resource's content (i.e. not its
                                            // status) is modified. You can think of it as being the "user version".
                                            //
                                            // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                                            // can treat its timestamp component as the resource's modification time.
                                    id:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // ID uniquely identifies the resource.
                                    metadata:
                                        type: object
                                        additionalProperties:
                                            type: string
                                        description: |
                                            // Metadata contains key/value pairs of arbitrary metadata about the resource.
                                    owner:
                                        $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                                        description: |
                                            // Owner (optionally) describes which resource "owns" this resource, it is
                                            // immutable and can only be set on resource creation. Owned resources will
                                            // be automatically deleted when their owner is deleted.
                                    status:
                                        type: object
                                        additionalProperties:
                                            $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                                        description: |
                                            // Status is used by controllers to communicate the result of attempting to
                                            // reconcile and apply the resource (e.g. surface semantic validation errors)
                                            // with users and other controllers. Each status is identified by a unique key
                                            // and should only ever be updated by one controller.
                                            //
                                            // Status can only be updated via the WriteStatus endpoint. Attempting to do
                                            // so via the Write endpoint will result in an InvalidArgument error code.
                                    version:
                                        type: string
                                        description: |
                                            // Version is the low-level version identifier used by the storage backend
                                            // in CAS (Compare-And-Swap) operations. It will change when the resource is
                                            // modified in any way, including status updates.
                                            //
                                            // When calling the Write endpoint, providing a non-blank version will perform
                                            // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                                            // if the given version doesn't match what is stored.
        delete:
            summary: Delete mesh.v1alpha1.Upstreams resources
            operationId: delete-Upstreams
            responses:
                "200":
                    description: The delete was successful and the body contains the result.
        parameters:
            - $ref: '#/components/parameters/peer'
            - $ref: '#/components/parameters/name'
            - $ref: '#/components/parameters/namespace'
            - $ref: '#/components/parameters/ns'
            - $ref: '#/components/parameters/partition'
components:
    schemas:
        google.protobuf.UInt32Value:
            type: object
            properties:
                value:
                    type: integer
                    format: int32
                    description: |
                        // The uint32 value.
            description: |4
                 Wrapper message for `uint32`.

                 The JSON representation for `UInt32Value` is JSON number.
        google.protobuf.UInt64Value:
            type: object
            properties:
                value:
                    type: integer
                    format: int64
                    description: |
                        // The uint64 value.
            description: |4
                 Wrapper message for `uint64`.

                 The JSON representation for `UInt64Value` is JSON string.
        hashicorp.consul.catalog.v1alpha1.Endpoint:
            type: object
            properties:
                addresses:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.WorkloadAddress'
                    description: |
                        // addresses is the list of addresses for this endpoint.
                        // This has the same structure as the workload addresses.
                health_status:
                    $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.Health'
                    description: |
                        // health_status is the aggregated health status of this endpoint.
                identity:
                    type: string
                    description: |
                        // identity is the name of the workload identity for this endpoint.
                ports:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.WorkloadPort'
                    description: |
                        // ports is the map of ports for this endpoint.
                        // This has the same structure as the workload ports but
                        // will be filtered to just the ports selected by the service.
                target_ref:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                        // target_ref is the reference to the resource
                        // for this endpoint endpoint. This currently must be a workload.
        hashicorp.consul.catalog.v1alpha1.FailoverMode:
            type: string
            enum:
                - FAILOVER_MODE_UNSPECIFIED
                - FAILOVER_MODE_SEQUENTIAL
                - FAILOVER_MODE_ORDER_BY_LOCALITY
        hashicorp.consul.catalog.v1alpha1.Health:
            type: string
            enum:
                - HEALTH_ANY
                - HEALTH_PASSING
                - HEALTH_WARNING
                - HEALTH_CRITICAL
                - HEALTH_MAINTENANCE
        hashicorp.consul.catalog.v1alpha1.Protocol:
            type: string
            enum:
                - PROTOCOL_UNSPECIFIED
                - PROTOCOL_TCP
                - PROTOCOL_HTTP
                - PROTOCOL_HTTP2
                - PROTOCOL_GRPC
                - PROTOCOL_MESH
        hashicorp.consul.catalog.v1alpha1.ServiceEndpoints:
            type: object
            properties:
                endpoints:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.Endpoint'
        hashicorp.consul.catalog.v1alpha1.WorkloadAddress:
            type: object
            properties:
                external:
                    type: boolean
                    description: |
                        // external indicates whether this address should be used for external communication
                        // (aka a WAN address).
                host:
                    type: string
                    description: |
                        // host can be an IP, DNS name or a unix socket.
                        // If it's a unix socket, only one port can be provided.
                ports:
                    type: array
                    items:
                        type: string
                    description: |
                        // ports is a list of names of ports that this host binds to.
                        // If no ports are provided, we will assume all ports from the ports map.
        hashicorp.consul.catalog.v1alpha1.WorkloadPort:
            type: object
            properties:
                port:
                    type: integer
                    format: int32
                protocol:
                    $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.Protocol'
        hashicorp.consul.catalog.v1alpha1.WorkloadSelector:
            type: object
            properties:
                filter:
                    type: string
                names:
                    type: array
                    items:
                        type: string
                prefixes:
                    type: array
                    items:
                        type: string
            description: |4
                 WorkloadSelector represents criteria for selecting a subset of workloads.
        hashicorp.consul.mesh.v1alpha1.BackendReference:
            type: object
            properties:
                datacenter:
                    type: string
                    description: |
                        // NOT IN GAMMA; multi-cluster + GWapi is still unknown
                        //
                        // Likely we could map this to ServiceImports (MCS+GAMMA) when translating
                        // to/from k8s.
                        //
                        // https://gateway-api.sigs.k8s.io/geps/gep-1748/
                port:
                    type: string
                    description: |
                        // For east/west this is the name of the consul port.
                ref:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Reference'
                    description: |
                        // For east/west configuration, this should point to either a
                        // pbcatalog.Service or ServiceSubset.
                        //
                        // For Partition/PeerName fields likely we could map them to ServiceImports
                        // (MCS+GAMMA) when translating
        hashicorp.consul.mesh.v1alpha1.BackendTargetDetails:
            type: object
            properties:
                backend_ref:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.BackendReference'
                destination_config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.DestinationConfig'
                failover_config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedFailoverConfig'
                identity_refs:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.resource.Reference'
                    description: |
                        // IdentityRefs are not populated naturally and the field exists only for
                        // downstream consumers.
                mesh_port:
                    type: string
                service_endpoints:
                    $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.ServiceEndpoints'
                    description: |
                        // ServiceEndpoints is not populated naturally and the field exists only for
                        // downstream consumers.
                service_endpoints_id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                        // ServiceEndpointsID is not populated naturally and the field exists only for
                        // downstream consumers.
                type:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.BackendTargetDetailsType'
        hashicorp.consul.mesh.v1alpha1.BackendTargetDetailsType:
            type: string
            enum:
                - BACKEND_TARGET_DETAILS_TYPE_UNSPECIFIED
                - BACKEND_TARGET_DETAILS_TYPE_DIRECT
                - BACKEND_TARGET_DETAILS_TYPE_INDIRECT
        hashicorp.consul.mesh.v1alpha1.BalanceConnections:
            type: string
            enum:
                - BALANCE_CONNECTIONS_DEFAULT
                - BALANCE_CONNECTIONS_EXACT
        hashicorp.consul.mesh.v1alpha1.ComputedFailoverConfig:
            type: object
            properties:
                destinations:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedFailoverDestination'
                mode:
                    $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.FailoverMode'
                regions:
                    type: array
                    items:
                        type: string
                sameness_group:
                    type: string
                    description: |
                        // SamenessGroup specifies the sameness group to failover to.
        hashicorp.consul.mesh.v1alpha1.ComputedFailoverDestination:
            type: object
            properties:
                backend_target:
                    type: string
                    description: |
                        // This must be a Service.
        hashicorp.consul.mesh.v1alpha1.ComputedGRPCBackendRef:
            type: object
            properties:
                backend_target:
                    type: string
                    description: |
                        // BackendTarget indicates which key in the targets map provides
                        // the rest of the configuration.
                        //
                        // If this field is set to the empty string, or is the sentinel value
                        // "NULL-ROUTE" is an indication that all of the traffic destined for this
                        // backend reference should be null routed in a format appropriate for the
                        // protocol (i.e. for HTTP use 5xx).
                filters:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRouteFilter'
                weight:
                    type: integer
                    format: int32
        hashicorp.consul.mesh.v1alpha1.ComputedGRPCRoute:
            type: object
            properties:
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedGRPCRouteRule'
        hashicorp.consul.mesh.v1alpha1.ComputedGRPCRouteRule:
            type: object
            properties:
                backend_refs:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedGRPCBackendRef'
                filters:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRouteFilter'
                matches:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRouteMatch'
                retries:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPRouteRetries'
                timeouts:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPRouteTimeouts'
        hashicorp.consul.mesh.v1alpha1.ComputedHTTPBackendRef:
            type: object
            properties:
                backend_target:
                    type: string
                    description: |
                        // BackendTarget indicates which key in the targets map provides
                        // the rest of the configuration.
                        //
                        // If this field is set to the empty string, or is the sentinel value
                        // "NULL-ROUTE" is an indication that all of the traffic destined for this
                        // backend reference should be null routed in a format appropriate for the
                        // protocol (i.e. for HTTP use 5xx).
                filters:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPRouteFilter'
                weight:
                    type: integer
                    format: int32
        hashicorp.consul.mesh.v1alpha1.ComputedHTTPRoute:
            type: object
            properties:
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedHTTPRouteRule'
        hashicorp.consul.mesh.v1alpha1.ComputedHTTPRouteRule:
            type: object
            properties:
                backend_refs:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedHTTPBackendRef'
                filters:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPRouteFilter'
                matches:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPRouteMatch'
                retries:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPRouteRetries'
                timeouts:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPRouteTimeouts'
        hashicorp.consul.mesh.v1alpha1.ComputedPortRoutes:
            type: object
            properties:
                grpc:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedGRPCRoute'
                http:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedHTTPRoute'
                parent_ref:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ParentReference'
                protocol:
                    $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.Protocol'
                    description: |
                        // Protocol is the ParentRef.Port's protocol. It is based on the value in the
                        // Service object, but may differ depending upon which xRoutes are actually
                        // in use.
                targets:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.BackendTargetDetails'
                    description: |
                        // map key is an opaque string; like disco chain target name
                tcp:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedTCPRoute'
                using_default_config:
                    type: boolean
        hashicorp.consul.mesh.v1alpha1.ComputedRoutes:
            type: object
            properties:
                ported_configs:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedPortRoutes'
            description: |4
                 This is a Resource type.
        hashicorp.consul.mesh.v1alpha1.ComputedTCPBackendRef:
            type: object
            properties:
                backend_target:
                    type: string
                    description: |
                        // BackendTarget indicates which key in the targets map provides
                        // the rest of the configuration.
                        //
                        // If this field is set to the empty string, or is the sentinel value
                        // "NULL-ROUTE" is an indication that all of the traffic destined for this
                        // backend reference should be null routed in a format appropriate for the
                        // protocol (i.e. for HTTP use 5xx).
                weight:
                    type: integer
                    format: int32
            description: |4
                 TODO: look into smuggling the target through a different typeURL, or just
                 skip in favor of letting the caller do their own lookups?
        hashicorp.consul.mesh.v1alpha1.ComputedTCPRoute:
            type: object
            properties:
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedTCPRouteRule'
        hashicorp.consul.mesh.v1alpha1.ComputedTCPRouteRule:
            type: object
            properties:
                backend_refs:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ComputedTCPBackendRef'
        hashicorp.consul.mesh.v1alpha1.CookieConfig:
            type: object
            properties:
                path:
                    type: string
                    description: |
                        // The path to set for the cookie
                session:
                    type: boolean
                    description: |
                        // Generates a session cookie with no expiration.
                ttl:
                    type: string
                    description: |
                        // TTL for generated cookies. Cannot be specified for session cookies.
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
            description: |4
                 CookieConfig contains configuration for the "cookie" hash policy type.
                 This is specified to have Envoy generate a cookie for a client on its first request.
        hashicorp.consul.mesh.v1alpha1.DestinationConfig:
            type: object
            properties:
                connect_timeout:
                    type: string
                    description: |
                        // ConnectTimeout is the timeout for establishing new network connections
                        // to this service.
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                load_balancer:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.LoadBalancer'
                    description: |
                        // LoadBalancer determines the load balancing policy and configuration for
                        // services issuing requests to this upstream service.
                locality_prioritization:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.LocalityPrioritization'
                    description: |
                        // LocalityPrioritization controls whether the locality of services within the
                        // local partition will be used to prioritize connectivity.
                request_timeout:
                    type: string
                    description: |
                        // RequestTimeout is the timeout for an HTTP request to complete before the
                        // connection is automatically terminated. If unspecified, defaults to 15
                        // seconds.
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
        hashicorp.consul.mesh.v1alpha1.DestinationPolicy:
            type: object
            properties:
                port_configs:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.DestinationConfig'
            description: |4
                 DestinationPolicy is the destination-controlled set of defaults that
                 are used when similar controls defined in an UpstreamConfig are left
                 unspecified.

                 Users may wish to share commonly configured settings for communicating with
                 a service in one place, but yet retain the ability to tweak those on a
                 client-by-client basis, which is why there are separate resources to control
                 the definition of these values from either end of the connection.

                 This is a Resource type.
        hashicorp.consul.mesh.v1alpha1.GRPCBackendRef:
            type: object
            properties:
                backend_ref:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.BackendReference'
                filters:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRouteFilter'
                    description: |
                        // Filters defined at this level should be executed if and only if the
                        // request is being forwarded to the backend defined here.
                weight:
                    type: integer
                    format: int32
                    description: |
                        // Weight specifies the proportion of requests forwarded to the referenced
                        // backend. This is computed as weight/(sum of all weights in this
                        // BackendRefs list). For non-zero values, there may be some epsilon from the
                        // exact proportion defined here depending on the precision an implementation
                        // supports. Weight is not a percentage and the sum of weights does not need
                        // to equal 100.
                        //
                        //If only one backend is specified and it has a weight greater than 0, 100%
                        //of the traffic is forwarded to that backend. If weight is set to 0, no
                        //traffic should be forwarded for this entry. If unspecified, weight defaults
                        //to 1.
        hashicorp.consul.mesh.v1alpha1.GRPCHeaderMatch:
            type: object
            properties:
                name:
                    type: string
                type:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HeaderMatchType'
                value:
                    type: string
        hashicorp.consul.mesh.v1alpha1.GRPCMethodMatch:
            type: object
            properties:
                method:
                    type: string
                    description: |
                        // Value of the method to match against. If left empty or omitted, will match
                        // all services.
                        //
                        // At least one of Service and Method MUST be a non-empty string.}
                service:
                    type: string
                    description: |
                        // Value of the service to match against. If left empty or omitted, will
                        // match any service.
                        //
                        // At least one of Service and Method MUST be a non-empty string.
                type:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCMethodMatchType'
                    description: |
                        // Type specifies how to match against the service and/or method. Support:
                        // Core (Exact with service and method specified)
        hashicorp.consul.mesh.v1alpha1.GRPCMethodMatchType:
            type: string
            enum:
                - GRPC_METHOD_MATCH_TYPE_UNSPECIFIED
                - GRPC_METHOD_MATCH_TYPE_EXACT
                - GRPC_METHOD_MATCH_TYPE_REGEX
        hashicorp.consul.mesh.v1alpha1.GRPCRoute:
            type: object
            properties:
                hostnames:
                    type: array
                    items:
                        type: string
                parent_refs:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ParentReference'
                    description: |
                        // ParentRefs references the resources (usually Gateways) that a Route wants
                        // to be attached to. Note that the referenced parent resource needs to allow
                        // this for the attachment to be complete. For Gateways, that means the
                        // Gateway needs to allow attachment from Routes of this kind and namespace.
                        //
                        // It is invalid to reference an identical parent more than once. It is valid
                        // to reference multiple distinct sections within the same parent resource,
                        // such as 2 Listeners within a Gateway.
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRouteRule'
                    description: |
                        // Rules are a list of GRPC matchers, filters and actions.
            description: |4
                 NOTE: this should align to the GAMMA/gateway-api version, or at least be
                 easily translatable.

                 https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1alpha2.GRPCRoute

                 This is a Resource type.
        hashicorp.consul.mesh.v1alpha1.GRPCRouteFilter:
            type: object
            properties:
                request_header_modifier:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPHeaderFilter'
                    description: |
                        // RequestHeaderModifier defines a schema for a filter that modifies request
                        // headers.
                response_header_modifier:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPHeaderFilter'
                    description: |
                        // ResponseHeaderModifier defines a schema for a filter that modifies
                        // response headers.
                url_rewrite:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPURLRewriteFilter'
                    description: |
                        // URLRewrite defines a schema for a filter that modifies a request during
                        // forwarding.
        hashicorp.consul.mesh.v1alpha1.GRPCRouteMatch:
            type: object
            properties:
                headers:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCHeaderMatch'
                    description: |
                        // Headers specifies gRPC request header matchers. Multiple match values are
                        // ANDed together, meaning, a request MUST match all the specified headers to
                        // select the route.
                method:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCMethodMatch'
                    description: |
                        // Method specifies a gRPC request service/method matcher. If this field is
                        // not specified, all services and methods will match.
        hashicorp.consul.mesh.v1alpha1.GRPCRouteRule:
            type: object
            properties:
                backend_refs:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCBackendRef'
                filters:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRouteFilter'
                matches:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.GRPCRouteMatch'
                retries:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPRouteRetries'
                    description: |
                        // ALTERNATIVE:
                timeouts:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPRouteTimeouts'
                    description: |
                        // ALTERNATIVE: Timeouts defines the timeouts that can be configured for an HTTP request.
        hashicorp.consul.mesh.v1alpha1.HTTPHeader:
            type: object
            properties:
                name:
                    type: string
                value:
                    type: string
        hashicorp.consul.mesh.v1alpha1.HTTPHeaderFilter:
            type: object
            properties:
                add:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPHeader'
                    description: |
                        // Add adds the given header(s) (name, value) to the request before the
                        // action. It appends to any existing values associated with the header name.
                remove:
                    type: array
                    items:
                        type: string
                    description: |
                        // Remove the given header(s) from the HTTP request before the action. The
                        // value of Remove is a list of HTTP header names. Note that the header names
                        // are case-insensitive (see
                        // https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                set:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPHeader'
                    description: |
                        // Set overwrites the request with the given header (name, value) before the
                        // action.
        hashicorp.consul.mesh.v1alpha1.HTTPHeaderMatch:
            type: object
            properties:
                invert:
                    type: boolean
                    description: |
                        // NOTE: not in gamma; service-router compat
                name:
                    type: string
                    description: |
                        // Name is the name of the HTTP Header to be matched. Name matching MUST be
                        // case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                        //
                        // If multiple entries specify equivalent header names, only the first entry
                        // with an equivalent name MUST be considered for a match. Subsequent entries
                        // with an equivalent header name MUST be ignored. Due to the
                        // case-insensitivity of header names, “foo” and “Foo” are considered
                        // equivalent.
                        //
                        // When a header is repeated in an HTTP request, it is
                        // implementation-specific behavior as to how this is represented. Generally,
                        // proxies should follow the guidance from the RFC:
                        // https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                        // processing a repeated header, with special handling for “Set-Cookie”.
                type:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HeaderMatchType'
                    description: |
                        // Type specifies how to match against the value of the header.
                value:
                    type: string
                    description: |
                        // Value is the value of HTTP Header to be matched.
        hashicorp.consul.mesh.v1alpha1.HTTPPathMatch:
            type: object
            properties:
                type:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.PathMatchType'
                    description: |
                        // Type specifies how to match against the path Value.
                value:
                    type: string
                    description: |
                        // Value of the HTTP path to match against.
        hashicorp.consul.mesh.v1alpha1.HTTPQueryParamMatch:
            type: object
            properties:
                name:
                    type: string
                    description: |
                        // Name is the name of the HTTP query param to be matched. This must be an
                        // exact string match. (See
                        // https://tools.ietf.org/html/rfc7230#section-2.7.3).
                        //
                        // If multiple entries specify equivalent query param names, only the first
                        // entry with an equivalent name MUST be considered for a match. Subsequent
                        // entries with an equivalent query param name MUST be ignored.
                        //
                        // If a query param is repeated in an HTTP request, the behavior is purposely
                        // left undefined, since different data planes have different capabilities.
                        // However, it is recommended that implementations should match against the
                        // first value of the param if the data plane supports it, as this behavior
                        // is expected in other load balancing contexts outside of the Gateway API.
                        //
                        // Users SHOULD NOT route traffic based on repeated query params to guard
                        // themselves against potential differences in the implementations.
                type:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.QueryParamMatchType'
                    description: |
                        // Type specifies how to match against the value of the query parameter.
                value:
                    type: string
                    description: |
                        // Value is the value of HTTP query param to be matched.
        hashicorp.consul.mesh.v1alpha1.HTTPRouteFilter:
            type: object
            properties:
                request_header_modifier:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPHeaderFilter'
                    description: |
                        // RequestHeaderModifier defines a schema for a filter that modifies request
                        // headers.
                response_header_modifier:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPHeaderFilter'
                    description: |
                        // ResponseHeaderModifier defines a schema for a filter that modifies
                        // response headers.
                url_rewrite:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPURLRewriteFilter'
                    description: |
                        // URLRewrite defines a schema for a filter that modifies a request during
                        // forwarding.
        hashicorp.consul.mesh.v1alpha1.HTTPRouteMatch:
            type: object
            properties:
                headers:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPHeaderMatch'
                    description: |
                        // Headers specifies HTTP request header matchers. Multiple match values are
                        // ANDed together, meaning, a request must match all the specified headers to
                        // select the route.
                method:
                    type: string
                    description: |
                        // Method specifies HTTP method matcher. When specified, this route will be
                        // matched only if the request has the specified method.
                path:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPPathMatch'
                    description: |
                        // Path specifies a HTTP request path matcher. If this field is not
                        // specified, a default prefix match on the “/” path is provided.
                query_params:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HTTPQueryParamMatch'
                    description: |
                        // QueryParams specifies HTTP query parameter matchers. Multiple match values
                        // are ANDed together, meaning, a request must match all the specified query
                        // parameters to select the route.
        hashicorp.consul.mesh.v1alpha1.HTTPRouteRetries:
            type: object
            properties:
                number:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                    description: |
                        // Number is the number of times to retry the request when a retryable
                        // result occurs.
                on_conditions:
                    type: array
                    items:
                        type: string
                    description: |
                        // RetryOn allows setting envoy specific conditions when a request should
                        // be automatically retried.
                on_connect_failure:
                    type: boolean
                    description: |
                        // RetryOnConnectFailure allows for connection failure errors to trigger a
                        // retry.
                on_status_codes:
                    type: array
                    items:
                        type: integer
                        format: int32
                    description: |
                        // RetryOnStatusCodes is a flat list of http response status codes that are
                        // eligible for retry. This again should be feasible in any reasonable proxy.
        hashicorp.consul.mesh.v1alpha1.HTTPRouteTimeouts:
            type: object
            properties:
                backend_request:
                    type: string
                    description: |
                        // BackendRequest specifies a timeout for an individual request from the gateway
                        // to a backend service. Typically used in conjuction with retry configuration,
                        // if supported by an implementation.
                        //
                        // The value of BackendRequest defaults to and must be <= the value of Request timeout.
                        //
                        // Support: Extended
                        //
                        // TODO(rb): net-new feature
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                idle:
                    type: string
                    description: |
                        // TODO(RB): this is a consul-only feature
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                request:
                    type: string
                    description: |
                        // Request specifies the duration for processing an HTTP client request after which the
                        // gateway will time out if unable to send a response.
                        // Whether the gateway starts the timeout before or after the entire client request stream
                        // has been received, is implementation-dependent.
                        //
                        // For example, setting the `rules.timeouts.request` field to the value `10s` in an
                        // `HTTPRoute` will cause a timeout if a client request is taking longer than 10 seconds
                        // to complete.
                        //
                        // When this field is unspecified, request timeout behavior is implementation-dependent.
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
            description: |4
                 HTTPRouteTimeouts defines timeouts that can be configured for an HTTPRoute.
                 Timeout values are formatted like 1h/1m/1s/1ms as parsed by Golang time.ParseDuration
                 and MUST BE >= 1ms.

                 ALTERNATIVE: not using policy attachment semantics
        hashicorp.consul.mesh.v1alpha1.HTTPURLRewriteFilter:
            type: object
            properties:
                path_prefix:
                    type: string
        hashicorp.consul.mesh.v1alpha1.HashPolicy:
            type: object
            properties:
                cookie_config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.CookieConfig'
                    description: |
                        // CookieConfig contains configuration for the "cookie" hash policy type.
                field:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HashPolicyField'
                    description: |
                        // Field is the attribute type to hash on.
                        // Must be one of "header","cookie", or "query_parameter".
                        // Cannot be specified along with SourceIP.
                field_value:
                    type: string
                    description: |
                        // FieldValue is the value to hash.
                        // ie. header name, cookie name, URL query parameter name
                        // Cannot be specified along with SourceIP.
                source_ip:
                    type: boolean
                    description: |
                        // SourceIP determines whether the hash should be of the source IP rather than of a field and field value.
                        // Cannot be specified along with Field or FieldValue.
                terminal:
                    type: boolean
                    description: |
                        // Terminal will short circuit the computation of the hash when multiple hash policies are present.
                        // If a hash is computed when a Terminal policy is evaluated,
                        // then that hash will be used and subsequent hash policies will be ignored.
            description: |4
                 HashPolicy defines which attributes will be hashed by hash-based LB algorithms
        hashicorp.consul.mesh.v1alpha1.HashPolicyField:
            type: string
            enum:
                - HASH_POLICY_FIELD_UNSPECIFIED
                - HASH_POLICY_FIELD_HEADER
                - HASH_POLICY_FIELD_COOKIE
                - HASH_POLICY_FIELD_QUERY_PARAMETER
        hashicorp.consul.mesh.v1alpha1.HeaderMatchType:
            type: string
            enum:
                - HEADER_MATCH_TYPE_UNSPECIFIED
                - HEADER_MATCH_TYPE_EXACT
                - HEADER_MATCH_TYPE_REGEX
                - HEADER_MATCH_TYPE_PRESENT
                - HEADER_MATCH_TYPE_PREFIX
                - HEADER_MATCH_TYPE_SUFFIX
            description: |4
                 HeaderMatchType specifies the semantics of how HTTP header values should be
                 compared. Valid HeaderMatchType values, along with their conformance levels,
                 are:

                 Note that values may be added to this enum, implementations must ensure that
                 unknown values will not cause a crash.

                 Unknown values here must result in the implementation setting the Accepted
                 Condition for the Route to status: False, with a Reason of UnsupportedValue.
        hashicorp.consul.mesh.v1alpha1.IPPortAddress:
            type: object
            properties:
                ip:
                    type: string
                    description: |
                        // ip is an IPv4 or an IPv6 address.
                port:
                    type: integer
                    format: int32
                    description: |
                        // port is the port number.
        hashicorp.consul.mesh.v1alpha1.LeastRequestConfig:
            type: object
            properties:
                choice_count:
                    type: integer
                    format: int32
                    description: |
                        // ChoiceCount determines the number of random healthy hosts from which to select the one with the least requests.
            description: |4
                 LeastRequestConfig contains configuration for the "least_request" policy type
        hashicorp.consul.mesh.v1alpha1.LoadBalancer:
            type: object
            properties:
                hash_policies:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.HashPolicy'
                    description: |
                        // HashPolicies is a list of hash policies to use for hashing load balancing
                        // algorithms. Hash policies are evaluated individually and combined such
                        // that identical lists result in the same hash.
                        //
                        // If no hash policies are present, or none are successfully evaluated,
                        // then a random backend host will be selected.
                least_request_config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.LeastRequestConfig'
                    description: |
                        // LeastRequestConfig contains configuration for the "least_request" policy type
                policy:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.LoadBalancerPolicy'
                    description: |
                        // Policy is the load balancing policy used to select a host
                ring_hash_config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.RingHashConfig'
                    description: |
                        // RingHashConfig contains configuration for the "ring_hash" policy type
            description: |4+
                 LoadBalancer determines the load balancing policy and configuration
                 for services issuing requests to this upstream service.

        hashicorp.consul.mesh.v1alpha1.LoadBalancerPolicy:
            type: string
            enum:
                - LOAD_BALANCER_POLICY_UNSPECIFIED
                - LOAD_BALANCER_POLICY_RANDOM
                - LOAD_BALANCER_POLICY_ROUND_ROBIN
                - LOAD_BALANCER_POLICY_LEAST_REQUEST
                - LOAD_BALANCER_POLICY_MAGLEV
                - LOAD_BALANCER_POLICY_RING_HASH
        hashicorp.consul.mesh.v1alpha1.LocalityPrioritization:
            type: object
            properties:
                mode:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.LocalityPrioritizationMode'
                    description: |
                        // Mode specifies the type of prioritization that will be performed
                        // when selecting nodes in the local partition.
                        // Valid values are: "" (default "none"), "none", and "failover".
        hashicorp.consul.mesh.v1alpha1.LocalityPrioritizationMode:
            type: string
            enum:
                - LOCALITY_PRIORITIZATION_MODE_UNSPECIFIED
                - LOCALITY_PRIORITIZATION_MODE_NONE
                - LOCALITY_PRIORITIZATION_MODE_FAILOVER
        hashicorp.consul.mesh.v1alpha1.MeshGatewayMode:
            type: string
            enum:
                - MESH_GATEWAY_MODE_UNSPECIFIED
                - MESH_GATEWAY_MODE_NONE
                - MESH_GATEWAY_MODE_LOCAL
                - MESH_GATEWAY_MODE_REMOTE
        hashicorp.consul.mesh.v1alpha1.ParentReference:
            type: object
            properties:
                port:
                    type: string
                    description: |
                        // Port is the network port this Route targets. It can be interpreted
                        // differently based on the type of parent resource.
                        //
                        // When the parent resource is a Gateway, this targets all listeners
                        // listening on the specified port that also support this kind of Route(and
                        // select this Route). It’s not recommended to set Port unless the networking
                        // behaviors specified in a Route must apply to a specific port as opposed to
                        // a listener(s) whose port(s) may be changed. When both Port and SectionName
                        // are specified, the name and port of the selected listener must match both
                        // specified values.
                        //
                        // Implementations MAY choose to support other parent resources.
                        // Implementations supporting other types of parent resources MUST clearly
                        // document how/if Port is interpreted.
                        //
                        // For the purpose of status, an attachment is considered successful as long
                        // as the parent resource accepts it partially. For example, Gateway
                        // listeners can restrict which Routes can attach to them by Route kind,
                        // namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        // the referencing Route, the Route MUST be considered successfully attached.
                        // If no Gateway listeners accept attachment from this Route, the Route MUST
                        // be considered detached from the Gateway.
                        //
                        // For east/west this is the name of the consul port.
                        // For north/south this is the stringified integer port expected by GAMMA.
                        //
                        // https://gateway-api.sigs.k8s.io/geps/gep-957/
                ref:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Reference'
                    description: |
                        // For east/west configuration, this should point to a pbcatalog.Service.
                        // For north/south it should point to a gateway (TBD)
            description: |4
                 NOTE: roughly equivalent to structs.ResourceReference
        hashicorp.consul.mesh.v1alpha1.PassiveHealthCheck:
            type: object
            properties:
                enforcing_consecutive_5xx:
                    type: integer
                    format: int32
                    description: |
                        // enforcing_consecutive_5xx is the % chance that a host will be actually ejected
                        // when an outlier status is detected through consecutive 5xx.
                        // This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
                interval:
                    type: string
                    description: |
                        // interval between health check analysis sweeps. Each sweep may remove
                        // hosts or return hosts to the pool.
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                max_failures:
                    type: integer
                    format: int32
                    description: |
                        // max_failures is the count of consecutive failures that results in a host
                        // being removed from the pool.
        hashicorp.consul.mesh.v1alpha1.PathMatchType:
            type: string
            enum:
                - PATH_MATCH_TYPE_UNSPECIFIED
                - PATH_MATCH_TYPE_EXACT
                - PATH_MATCH_TYPE_PREFIX
                - PATH_MATCH_TYPE_REGEX
            description: |4
                 PathMatchType specifies the semantics of how HTTP paths should be compared.
                 Valid PathMatchType values, along with their support levels, are:

                 PathPrefix and Exact paths must be syntactically valid:

                 - Must begin with the / character
                 - Must not contain consecutive / characters (e.g. /foo///, //).
                 - Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash.

                 Unknown values here must result in the implementation setting the Accepted
                 Condition for the Route to status: False, with a Reason of UnsupportedValue.
        hashicorp.consul.mesh.v1alpha1.PreparedQueryUpstream:
            type: object
            properties:
                datacenter:
                    type: string
                    description: |
                        // datacenter is the datacenter for where this upstream service lives.
                name:
                    type: string
                    description: |
                        // name is the name of the prepared query to use as an upstream.
                tcp:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.IPPortAddress'
                unix:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.UnixSocketAddress'
                upstream_config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.UpstreamConfig'
        hashicorp.consul.mesh.v1alpha1.ProxyState:
            type: object
            properties:
                access_logs:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.AccessLogs'
                    description: |
                        // access_logs configures access logging for this proxy.
                clusters:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Cluster'
                    description: |
                        // clusters is a map from cluster name to clusters. The keys are referenced from listeners or routes.
                endpoints:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Endpoints'
                    description: |
                        // endpoints is a map from cluster name to endpoints.
                escape:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.EscapeHatches'
                    description: |
                        // escape defines top level escape hatches. These are user configured json strings that configure an entire piece of listener or cluster Envoy configuration.
                identity:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Reference'
                    description: |
                        // identity is a reference to the identity of the workload this proxy is for.
                leaf_certificates:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.LeafCertificate'
                    description: |
                        // leaf certificates is a map from UUID to leaf certificates.
                listeners:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Listener'
                    description: |
                        // listeners is a list of listeners for this proxy.
                routes:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Route'
                    description: |
                        // routes is a map from route name to routes. The keys are referenced from listeners.
                tls:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TLS'
                    description: |
                        // tls has TLS configuration for this proxy.
                traffic_permission_default_allow:
                    type: boolean
                    description: |
                        // traffic_permission_default_allow is the default action for traffic permissions. This determines how the Envoy RBAC filters are generated.
                trust_bundles:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TrustBundle'
                    description: |
                        // trust bundles is a map from peer name to trust bundles.
        hashicorp.consul.mesh.v1alpha1.ProxyStateTemplate:
            type: object
            properties:
                proxy_state:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ProxyState'
                    description: |
                        // proxy_state is the partially filled out ProxyState resource. The Endpoints, LeafCertificates and TrustBundles fields will need filling in after the resource is stored.
                required_endpoints:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.EndpointRef'
                    description: |
                        // required_endpoints is a map of arbitrary string names to endpoint refs that need fetching by the proxy state controller.
                required_leaf_certificates:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.LeafCertificateRef'
                    description: |
                        // required_leaf_certificates is a map of arbitrary string names to leaf certificates that need fetching/generation by the proxy state controller.
                required_trust_bundles:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TrustBundleRef'
                    description: |
                        // required_trust_bundles is a map of arbitrary string names to trust bundle refs that need fetching by the proxy state controller.
        hashicorp.consul.mesh.v1alpha1.QueryParamMatchType:
            type: string
            enum:
                - QUERY_PARAM_MATCH_TYPE_UNSPECIFIED
                - QUERY_PARAM_MATCH_TYPE_EXACT
                - QUERY_PARAM_MATCH_TYPE_REGEX
                - QUERY_PARAM_MATCH_TYPE_PRESENT
        hashicorp.consul.mesh.v1alpha1.RingHashConfig:
            type: object
            properties:
                maximum_ring_size:
                    type: integer
                    format: int64
                    description: |
                        // MaximumRingSize determines the maximum number of entries in the hash ring
                minimum_ring_size:
                    type: integer
                    format: int64
                    description: |
                        // MinimumRingSize determines the minimum number of entries in the hash ring
            description: |4
                 RingHashConfig contains configuration for the "ring_hash" policy type
        hashicorp.consul.mesh.v1alpha1.TCPBackendRef:
            type: object
            properties:
                backend_ref:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.BackendReference'
                weight:
                    type: integer
                    format: int32
                    description: |
                        // Weight specifies the proportion of requests forwarded to the referenced
                        // backend. This is computed as weight/(sum of all weights in this
                        // BackendRefs list). For non-zero values, there may be some epsilon from the
                        // exact proportion defined here depending on the precision an implementation
                        // supports. Weight is not a percentage and the sum of weights does not need
                        // to equal 100.
                        //
                        //If only one backend is specified and it has a weight greater than 0, 100%
                        //of the traffic is forwarded to that backend. If weight is set to 0, no
                        //traffic should be forwarded for this entry. If unspecified, weight defaults
                        //to 1.
        hashicorp.consul.mesh.v1alpha1.TCPRoute:
            type: object
            properties:
                parent_refs:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.ParentReference'
                    description: |
                        // ParentRefs references the resources (usually Gateways) that a Route wants
                        // to be attached to. Note that the referenced parent resource needs to allow
                        // this for the attachment to be complete. For Gateways, that means the
                        // Gateway needs to allow attachment from Routes of this kind and namespace.
                        //
                        // It is invalid to reference an identical parent more than once. It is valid
                        // to reference multiple distinct sections within the same parent resource,
                        // such as 2 Listeners within a Gateway.
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.TCPRouteRule'
                    description: |
                        // Rules are a list of TCP matchers and actions.
            description: |4
                 NOTE: this should align to the GAMMA/gateway-api version, or at least be
                 easily translatable.

                 https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1alpha2.TCPRoute

                 This is a Resource type.
        hashicorp.consul.mesh.v1alpha1.TCPRouteRule:
            type: object
            properties:
                backend_refs:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.TCPBackendRef'
                    description: |
                        // BackendRefs defines the backend(s) where matching requests should be sent.
                        // If unspecified or invalid (refers to a non-existent resource or a Service
                        // with no endpoints), the underlying implementation MUST actively reject
                        // connection attempts to this backend. Connection rejections must respect
                        // weight; if an invalid backend is requested to have 80% of connections,
                        // then 80% of connections must be rejected instead.
        hashicorp.consul.mesh.v1alpha1.UnixSocketAddress:
            type: object
            properties:
                mode:
                    type: string
                    description: |
                        // mode is the Unix file mode for the socket file. It should be provided
                        // in the numeric notation, for example, "0600".
                path:
                    type: string
                    description: |
                        // path is the file system path at which to bind a Unix domain socket listener.
        hashicorp.consul.mesh.v1alpha1.Upstream:
            type: object
            properties:
                datacenter:
                    type: string
                    description: |
                        // datacenter is the datacenter for where this upstream service lives.
                destination_port:
                    type: string
                    description: |
                        // destination_port is the port name of the upstream service. This should be the name
                        // of the service's target port.
                destination_ref:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Reference'
                    description: |
                        // destination_ref is the reference to an upstream service. This has to be pbcatalog.Service type.
                ip_port:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.IPPortAddress'
                unix:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.UnixSocketAddress'
        hashicorp.consul.mesh.v1alpha1.UpstreamConfig:
            type: object
            properties:
                balance_outbound_connections:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.BalanceConnections'
                    description: |
                        // balance_outbound_connections indicates how the proxy should attempt to distribute
                        // connections across worker threads.
                connect_timeout:
                    type: string
                    description: |
                        // connect_timeout is the timeout used when making a new
                        // connection to this upstream. Defaults to 5 seconds if not set.
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                limits:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.UpstreamLimits'
                    description: |
                        // limits are the set of limits that are applied to the proxy for a specific upstream.
                mesh_gateway_mode:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.MeshGatewayMode'
                    description: |
                        // MeshGatewayMode is the Mesh Gateway routing mode.
                passive_health_check:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.PassiveHealthCheck'
                    description: |
                        // passive_health_check configuration determines how upstream proxy instances will
                        // be monitored for removal from the load balancing pool.
                protocol:
                    $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.Protocol'
                    description: |
                        // protocol overrides upstream's port protocol. If no port for an upstream is specified
                        // or if used in the default configuration, this protocol will be used for all ports
                        // or for all ports of all upstreams respectively.
        hashicorp.consul.mesh.v1alpha1.UpstreamLimits:
            type: object
            properties:
                max_concurrent_requests:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                    description: |
                        // max_concurrent_requests is the maximum number of in-flight requests that will be allowed
                        // to the upstream cluster at a point in time. This is mostly applicable to HTTP/2
                        // clusters since all HTTP/1.1 requests are limited by MaxConnections.
                max_connections:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                    description: |
                        // max_connections is the maximum number of connections the local proxy can
                        // make to the upstream service.
                max_pending_requests:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                    description: |
                        // max_pending_requests is the maximum number of requests that will be queued
                        // waiting for an available connection. This is mostly applicable to HTTP/1.1
                        // clusters since all HTTP/2 requests are streamed over a single
                        // connection.
            description: |4
                 UpstreamLimits describes the limits that are associated with a specific
                 upstream of a service instance.
        hashicorp.consul.mesh.v1alpha1.Upstreams:
            type: object
            properties:
                pq_upstreams:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.PreparedQueryUpstream'
                    description: |
                        // pq_upstreams is the list of prepared query upstreams. This field is not supported directly in v2
                        // and should only be used for migration reasons.
                upstreams:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.Upstream'
                    description: |
                        // upstreams is the list of explicit upstreams to define for the selected workloads.
                workloads:
                    $ref: '#/components/schemas/hashicorp.consul.catalog.v1alpha1.WorkloadSelector'
                    description: |
                        // Selection of workloads these upstreams should apply to.
                        // These can be prefixes or specific workload names.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.AccessLogs:
            type: object
            properties:
                disable_listener_logs:
                    type: boolean
                    description: |
                        // disable_listener_logs turns off just listener logs for connections rejected by Envoy because they don't
                        // have a matching listener filter.
                enabled:
                    type: boolean
                    description: |
                        // enabled enables access logging.
                json:
                    type: string
                path:
                    type: string
                    description: |
                        // path is the output file to write logs
                text:
                    type: string
                type:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.LogSinkType'
                    description: |
                        // type selects the output for logs: "file", "stderr". "stdout"
        hashicorp.consul.mesh.v1alpha1.pbproxystate.AppendAction:
            type: string
            enum:
                - APPEND_ACTION_APPEND_IF_EXISTS_OR_ADD
                - APPEND_ACTION_OVERWRITE_IF_EXISTS_OR_ADD
        hashicorp.consul.mesh.v1alpha1.pbproxystate.BalanceConnections:
            type: string
            enum:
                - BALANCE_CONNECTIONS_DEFAULT
                - BALANCE_CONNECTIONS_EXACT
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Capability:
            type: string
            enum:
                - CAPABILITY_TRANSPARENT
                - CAPABILITY_L7_PROTOCOL_INSPECTION
                - CAPABILITY_L4_TLS_INSPECTION
            description: |4
                 Capabilities map to proxy functionality to enable. These enable tproxy, l7 protocol/alpn inspection, or l4 sni/alpn inspection.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.CidrRange:
            type: object
            properties:
                address_prefix:
                    type: string
                prefix_len:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.CircuitBreakers:
            type: object
            properties:
                upstream_limits:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.UpstreamLimits'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Cluster:
            type: object
            properties:
                alt_stat_name:
                    type: string
                    description: |
                        // alt_stat_name is the name used for observability in place of cluster name if provided.
                endpoint_group:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.EndpointGroup'
                escape_hatch_cluster_json:
                    type: string
                    description: |
                        // escape_hatch_cluster_json configures a user configured escape hatch cluster.
                failover_group:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.FailoverGroup'
                name:
                    type: string
                    description: |
                        // name is the name of the cluster.
                protocol:
                    type: string
                    description: |
                        // protocol is the local path protocol or the service protocol.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.ConnectionPropertiesPolicy:
            type: object
            properties:
                source_ip:
                    type: boolean
                terminal:
                    type: boolean
        hashicorp.consul.mesh.v1alpha1.pbproxystate.CookiePolicy:
            type: object
            properties:
                name:
                    type: string
                path:
                    type: string
                terminal:
                    type: boolean
                ttl:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
        hashicorp.consul.mesh.v1alpha1.pbproxystate.DNSEndpointGroup:
            type: object
            properties:
                config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.DNSEndpointGroupConfig'
                    description: |
                        // config configures how to connect to the endpoints.
                outbound_tls:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TransportSocket'
                    description: |
                        // outbound_tls will configure what TLS information to use when connecting to an upstream.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.DNSEndpointGroupConfig:
            type: object
            properties:
                circuit_breakers:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.CircuitBreakers'
                connect_timeout:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                disable_panic_threshold:
                    type: boolean
                discovery_type:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.DiscoveryType'
                outlier_detection:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.OutlierDetection'
                upstream_connection_options:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.UpstreamConnectionOptions'
                use_alt_stat_name:
                    type: boolean
        hashicorp.consul.mesh.v1alpha1.pbproxystate.DestinationCluster:
            type: object
            properties:
                name:
                    type: string
                    description: |
                        // name is the name of the cluster. This will be used to look up a cluster in the clusters map.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.DestinationConfiguration:
            type: object
            properties:
                auto_host_rewrite:
                    type: boolean
                hash_policies:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.LoadBalancerHashPolicy'
                prefix_rewrite:
                    type: string
                retry_policy:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.RetryPolicy'
                timeout_config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TimeoutConfig'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Direction:
            type: string
            enum:
                - DIRECTION_UNSPECIFIED
                - DIRECTION_INBOUND
                - DIRECTION_OUTBOUND
        hashicorp.consul.mesh.v1alpha1.pbproxystate.DiscoveryType:
            type: string
            enum:
                - DISCOVERY_TYPE_LOGICAL
                - DISCOVERY_TYPE_STRICT
        hashicorp.consul.mesh.v1alpha1.pbproxystate.DynamicEndpointGroup:
            type: object
            properties:
                config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.DynamicEndpointGroupConfig'
                    description: |
                        // config configures how to connect to the endpoints.
                outbound_tls:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TransportSocket'
                    description: |
                        // outbound_tls will configure what TLS information to use when connecting to an upstream.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.DynamicEndpointGroupConfig:
            type: object
            properties:
                circuit_breakers:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.CircuitBreakers'
                connect_timeout:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                disable_panic_threshold:
                    type: boolean
                least_request:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyLeastRequest'
                maglev:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyMaglev'
                outlier_detection:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.OutlierDetection'
                random:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyRandom'
                ring_hash:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyRingHash'
                round_robin:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyRoundRobin'
                upstream_connection_options:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.UpstreamConnectionOptions'
                use_alt_stat_name:
                    type: boolean
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Endpoint:
            type: object
            properties:
                health_status:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.HealthStatus'
                host_port:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.HostPortAddress'
                load_balancing_weight:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                unix_socket:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.UnixSocketAddress'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.EndpointGroup:
            type: object
            properties:
                dns:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.DNSEndpointGroup'
                    description: |
                        // dns is used to reach mesh and non-mesh destinations using a hostname.
                dynamic:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.DynamicEndpointGroup'
                    description: |
                        // dynamic endpoint group is used to reach mesh destinations that are dynamically configured from Consul's catalog.
                name:
                    type: string
                    description: |
                        // name is used to name the cluster created. This is only required when used inside of a FailoverGroup.
                passthrough:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.PassthroughEndpointGroup'
                    description: |
                        // passthrough is used to reach destinations that don't have endpoints saved in Consul.
                static:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.StaticEndpointGroup'
                    description: |
                        // static endpoint group is used to reach local app ports.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.EndpointRef:
            type: object
            properties:
                id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                        // id is the ServiceEndpoints resource id.
                port:
                    type: string
                    description: |
                        // port is the name of the port in the ServiceEndpoints to generate the Endpoints from.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Endpoints:
            type: object
            properties:
                endpoints:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Endpoint'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.EscapeHatches:
            type: object
            properties:
                listener_tracing_json:
                    type: string
                    description: |
                        // listener_tracing_json contains user provided tracing configuration.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.FailoverGroup:
            type: object
            properties:
                config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.FailoverGroupConfig'
                endpoint_groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.EndpointGroup'
                    description: |
                        // endpoint_groups is an ordered list of which groups to failover to.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.FailoverGroupConfig:
            type: object
            properties:
                connect_timeout:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                use_alt_stat_name:
                    type: boolean
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Header:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.HeaderMatch:
            type: object
            properties:
                exact:
                    type: string
                invert_match:
                    type: boolean
                name:
                    type: string
                prefix:
                    type: string
                present:
                    type: boolean
                regex:
                    type: string
                suffix:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.HeaderMutation:
            type: object
            properties:
                request_header_add:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.RequestHeaderAdd'
                request_header_remove:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.RequestHeaderRemove'
                response_header_add:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.ResponseHeaderAdd'
                response_header_remove:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.ResponseHeaderRemove'
            description: |4
                 Note: it's nice to have this list of header mutations as opposed to configuration similar to Envoy because it
                 translates more nicely from GAMMA HTTPRoute, and our existing service router config. Then xds code can handle turning
                 it into envoy xds.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.HeaderPolicy:
            type: object
            properties:
                name:
                    type: string
                terminal:
                    type: boolean
        hashicorp.consul.mesh.v1alpha1.pbproxystate.HealthStatus:
            type: string
            enum:
                - HEALTH_STATUS_UNKNOWN
                - HEALTH_STATUS_HEALTHY
                - HEALTH_STATUS_UNHEALTHY
        hashicorp.consul.mesh.v1alpha1.pbproxystate.HostPortAddress:
            type: object
            properties:
                host:
                    type: string
                port:
                    type: integer
                    format: int32
        hashicorp.consul.mesh.v1alpha1.pbproxystate.InboundMeshMTLS:
            type: object
            properties:
                identity_key:
                    type: string
                    description: |
                        // identity_key is UUID key to use to look up the leaf certificate in ProxyState to present for incoming connections.
                validation_context:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.MeshInboundValidationContext'
                    description: |
                        // validation_context has what is needed to validate incoming connections.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.InboundNonMeshTLS:
            type: object
            properties:
                leaf_key:
                    type: string
                    description: |
                        // leaf_key is the UUID key to use to look up the leaf certificate in the ProxyState leaf certificate map.
                sds:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.SDSCertificate'
                    description: |
                        // sds refers to certificates retrieved via Envoy SDS.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.L4Destination:
            type: object
            properties:
                cluster:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.DestinationCluster'
                max_inbound_connections:
                    type: integer
                    format: int64
                    description: |
                        // max_inbound_connections specifies how many connections this destination can accept.
                stat_prefix:
                    type: string
                    description: |
                        // stat_prefix is for compatibility with v1 xds configuration, so it is generated in exactly the same way.
                traffic_permissions:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TrafficPermissions'
                    description: |
                        // traffic_permissions is a list of traffic permissions for this destination.
                weighted_clusters:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.L4WeightedClusterGroup'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.L4WeightedClusterGroup:
            type: object
            properties:
                clusters:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.L4WeightedDestinationCluster'
                    description: |
                        // clusters to route to by weight.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.L4WeightedDestinationCluster:
            type: object
            properties:
                name:
                    type: string
                    description: |
                        // name is the name of the cluster. This will be used to look up a cluster in the clusters map.
                weight:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.L7Destination:
            type: object
            properties:
                include_xfcc:
                    type: boolean
                    description: |
                        // include_xfcc specifies whether to add xfcc header.
                max_inbound_connections:
                    type: integer
                    format: int64
                    description: |
                        // max_inbound_connections specifies how many connections this destination can accept.
                name:
                    type: string
                    description: |
                        // name is a key in the top level routes map. This specifies which route to go to in this L7 destination.
                protocol:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.L7Protocol'
                    description: |
                        // protocol for the destination.
                stat_prefix:
                    type: string
                    description: |
                        // stat_prefix is for compatibility with v1 xds configuration, so it is generated in exactly the same way.
                static_route:
                    type: boolean
                    description: |
                        // static_route specifies whether this is a static route that is inlined in the listener filter. This is required to
                        // match existing xds config.
                traffic_permissions:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TrafficPermissions'
                    description: |
                        // traffic_permissions is a list of intentions for this destination.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.L7Protocol:
            type: string
            enum:
                - L7_PROTOCOL_HTTP
                - L7_PROTOCOL_HTTP2
                - L7_PROTOCOL_GRPC
        hashicorp.consul.mesh.v1alpha1.pbproxystate.L7WeightedClusterGroup:
            type: object
            properties:
                clusters:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.L7WeightedDestinationCluster'
                    description: |
                        // clusters to route to by weight.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.L7WeightedDestinationCluster:
            type: object
            properties:
                header_mutations:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.HeaderMutation'
                name:
                    type: string
                    description: |
                        // name is the name of the cluster. This will be used to look up a cluster in the clusters map.
                weight:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyLeastRequest:
            type: object
            properties:
                choice_count:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyMaglev:
            type: object
        hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyRandom:
            type: object
        hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyRingHash:
            type: object
            properties:
                maximum_ring_size:
                    $ref: '#/components/schemas/google.protobuf.UInt64Value'
                minimum_ring_size:
                    $ref: '#/components/schemas/google.protobuf.UInt64Value'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.LBPolicyRoundRobin:
            type: object
        hashicorp.consul.mesh.v1alpha1.pbproxystate.LeafCertificate:
            type: object
            properties:
                cert:
                    type: string
                key:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.LeafCertificateRef:
            type: object
            properties:
                datacenter:
                    type: string
                dns_san:
                    type: array
                    items:
                        type: string
                host:
                    type: string
                name:
                    type: string
                namespace:
                    type: string
                partition:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Listener:
            type: object
            properties:
                balance_connections:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.BalanceConnections'
                    description: |
                        // balance_connections configures how the listener should balance connections.
                capabilities:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Capability'
                        description: |
                            // capabilities describe Envoy proxy functionality to enable. These map closely to Envoy listener filters.
                    description: |
                        // capabilities describe Envoy proxy functionality to enable. These map closely to Envoy listener filters.
                default_router:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Router'
                    description: |
                        // default_router describes where to route if none of the other router matches match the connection.
                direction:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Direction'
                    description: |
                        // direction tells the listener the direction of traffic.
                escape_hatch_listener:
                    type: string
                    description: |
                        // escape_hatch_listener_json configures a user configured escape hatch listener.
                host_port:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.HostPortAddress'
                name:
                    type: string
                    description: |
                        // name is the name of the listener.
                routers:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Router'
                    description: |
                        // routers describes how to route traffic from this listener.
                unix_socket:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.UnixSocketAddress'
                use_escape_hatch_tracing:
                    type: boolean
                    description: |
                        // use_escape_hatch_tracing configures whether to use the top level user configured tracing escape hatch for this listener.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.LoadBalancerHashPolicy:
            type: object
            properties:
                connection_properties:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.ConnectionPropertiesPolicy'
                cookie:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.CookiePolicy'
                header:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.HeaderPolicy'
                query_parameter:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.QueryParameterPolicy'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.LogSinkType:
            type: string
            enum:
                - LOG_SINK_TYPE_DEFAULT
                - LOG_SINK_TYPE_FILE
                - LOG_SINK_TYPE_STDERR
                - LOG_SINK_TYPE_STDOUT
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Match:
            type: object
            properties:
                alpn_protocols:
                    type: array
                    items:
                        type: string
                destination_port:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                prefix_ranges:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.CidrRange'
                server_names:
                    type: array
                    items:
                        type: string
                    description: |
                        // server_names matches based on SNI of the incoming request.
                source_prefix_ranges:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.CidrRange'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.MeshInboundValidationContext:
            type: object
            properties:
                trust_bundle_peer_name_keys:
                    type: array
                    items:
                        type: string
                    description: |
                        // trust_bundle_peer_name_keys is which trust bundles to use for validating incoming connections. If this workload is exported
                        // to peers, the incoming connection could be from a different peer, requiring that trust bundle to validate the
                        // connection. These could be local or peered trust bundles. This will be a key in the trust bundle map.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.MeshOutboundValidationContext:
            type: object
            properties:
                spiffe_ids:
                    type: array
                    items:
                        type: string
                    description: |
                        // spiffe_ids is one or more spiffe IDs to validate.
                trust_bundle_peer_name_key:
                    type: string
                    description: |
                        // trust_bundle_peer_name_key is which trust bundle to use for the destination. It could be the local or a peer's trust bundle.
                        // This will be a key in the trust bundle map.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.NonMeshOutboundValidationContext:
            type: object
            properties:
                ca_file:
                    type: string
                    description: |
                        // ca_file is a filename for a ca for outbound connections to validate the destination.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.OutboundMeshMTLS:
            type: object
            properties:
                identity_key:
                    type: string
                    description: |
                        // identity_key is UUID key to use to look up the leaf certificate in ProxyState when connecting to destinations.
                sni:
                    type: string
                    description: |
                        // sni to use when connecting to the destination.
                validation_context:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.MeshOutboundValidationContext'
                    description: |
                        // validation_context has what is needed to validate the destination.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.OutboundNonMeshTLS:
            type: object
            properties:
                cert_file:
                    type: string
                    description: |
                        // cert_file is a filename for a certificate to present for outbound connections.
                key_file:
                    type: string
                    description: |
                        // key_file is a filename for a key for outbound connections.
                validation_context:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.NonMeshOutboundValidationContext'
                    description: |
                        // validation_context has what is needed to validate the destination.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.OutlierDetection:
            type: object
            properties:
                base_ejection_time:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                consecutive_5xx:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                enforcing_consecutive_5xx:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                interval:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                max_ejection_percent:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.PassthroughEndpointGroup:
            type: object
            properties:
                config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.PassthroughEndpointGroupConfig'
                    description: |
                        // config configures how to connect to the endpoints.
                outbound_tls:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TransportSocket'
                    description: |
                        // outbound_tls will configure what TLS information to use when connecting to an upstream.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.PassthroughEndpointGroupConfig:
            type: object
            properties:
                connect_timeout:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
        hashicorp.consul.mesh.v1alpha1.pbproxystate.PathMatch:
            type: object
            properties:
                exact:
                    type: string
                prefix:
                    type: string
                regex:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Permission:
            type: object
            properties:
                principals:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Principal'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Principal:
            type: object
            properties:
                exclude_spiffes:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Spiffe'
                spiffe:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Spiffe'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.QueryParameterMatch:
            type: object
            properties:
                exact:
                    type: string
                name:
                    type: string
                present:
                    type: boolean
                regex:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.QueryParameterPolicy:
            type: object
            properties:
                name:
                    type: string
                terminal:
                    type: boolean
        hashicorp.consul.mesh.v1alpha1.pbproxystate.RequestHeaderAdd:
            type: object
            properties:
                append_action:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.AppendAction'
                header:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Header'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.RequestHeaderRemove:
            type: object
            properties:
                header_keys:
                    type: array
                    items:
                        type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.ResponseHeaderAdd:
            type: object
            properties:
                append_action:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.AppendAction'
                header:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Header'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.ResponseHeaderRemove:
            type: object
            properties:
                header_keys:
                    type: array
                    items:
                        type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.RetryPolicy:
            type: object
            properties:
                num_retries:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                retriable_status_codes:
                    type: array
                    items:
                        type: integer
                        format: int32
                retry_on:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Route:
            type: object
            properties:
                virtual_hosts:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.VirtualHost'
                    description: |
                        // virtual_hosts is a list of virtual hosts. A virtual host is selected based on an incoming request's host header.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.RouteDestination:
            type: object
            properties:
                cluster:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.DestinationCluster'
                destination_configuration:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.DestinationConfiguration'
                weighted_clusters:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.L7WeightedClusterGroup'
            description: |4
                 RouteDestination has configuration for where to send a request.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.RouteMatch:
            type: object
            properties:
                header_matches:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.HeaderMatch'
                method_matches:
                    type: array
                    items:
                        type: string
                path_match:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.PathMatch'
                query_parameter_matches:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.QueryParameterMatch'
            description: |4
                 RouteMatch has configuration to match a request.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.RouteRule:
            type: object
            properties:
                destination:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.RouteDestination'
                    description: |
                        // destination is where to send the request to.
                header_mutations:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.HeaderMutation'
                    description: |
                        // header_mutations to apply to the request. These are applied before the VirtualHost header mutations.
                match:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.RouteMatch'
                    description: |
                        // match determines how to match the request. The first match determines which destination the request will go to.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Router:
            type: object
            properties:
                inbound_tls:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TransportSocket'
                    description: |
                        // inbound_tls is used by inbound listeners that terminate TLS.
                l4:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.L4Destination'
                    description: |
                        // l4 is an l4 destination to route to, which will have a reference to a cluster.
                l7:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.L7Destination'
                    description: |
                        // l7 is an l7 destination to route to, which will have a reference to a route.
                match:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Match'
                    description: |
                        // match specifies how to match traffic coming into this listener. If the traffic matches, it will be routed to the
                        // destination.
                sni:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.SNIDestination'
                    description: |
                        // sni is an SNI destination, which means there will be no references, but the SNI name will be tied to the cluster
                        // name, so we should generate all clusters.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.SDSCertificate:
            type: object
            properties:
                cert_resource:
                    type: string
                cluster_name:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.SNIDestination:
            type: object
            properties:
                stat_prefix:
                    type: string
                    description: |
                        // stat_prefix is for compatibility with v1 xds configuration, so it is generated in exactly the same way.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.Spiffe:
            type: object
            properties:
                regex:
                    type: string
                    description: |
                        // regex is the regular expression for matching spiffe ids.
                xfcc_regex:
                    type: string
                    description: |
                        // xfcc_regex specifies that Envoy needs to find the spiffe id in an xfcc header.
                        // It is currently unused, but considering this is important for to avoid breaking changes.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.StaticEndpointGroup:
            type: object
            properties:
                config:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.StaticEndpointGroupConfig'
                    description: |
                        // config configures how to connect to the endpoints.
            description: |4
                 StaticEndpointGroup is used to reach local app ports.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.StaticEndpointGroupConfig:
            type: object
            properties:
                circuit_breakers:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.CircuitBreakers'
                connect_timeout:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
        hashicorp.consul.mesh.v1alpha1.pbproxystate.TLS:
            type: object
            properties:
                inbound_tls_parameters:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TLSParameters'
                    description: |
                        // inbound_tls_parameters has default TLS parameter configuration for inbound connections. These can be overridden per
                        // transport socket.
                outbound_tls_parameters:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TLSParameters'
                    description: |
                        // outbound_tls_parameters has default TLS parameter configuration for inbound connections. These can be overridden per transport socket.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.TLSCipherSuite:
            type: string
            enum:
                - TLS_CIPHER_SUITE_ECDHE_ECDSA_AES128_GCM_SHA256
                - TLS_CIPHER_SUITE_ECDHE_ECDSA_CHACHA20_POLY1305
                - TLS_CIPHER_SUITE_ECDHE_RSA_AES128_GCM_SHA256
                - TLS_CIPHER_SUITE_ECDHE_RSA_CHACHA20_POLY1305
                - TLS_CIPHER_SUITE_ECDHE_ECDSA_AES128_SHA
                - TLS_CIPHER_SUITE_ECDHE_RSA_AES128_SHA
                - TLS_CIPHER_SUITE_AES128_GCM_SHA256
                - TLS_CIPHER_SUITE_AES128_SHA
                - TLS_CIPHER_SUITE_ECDHE_ECDSA_AES256_GCM_SHA384
                - TLS_CIPHER_SUITE_ECDHE_RSA_AES256_GCM_SHA384
                - TLS_CIPHER_SUITE_ECDHE_ECDSA_AES256_SHA
                - TLS_CIPHER_SUITE_ECDHE_RSA_AES256_SHA
                - TLS_CIPHER_SUITE_AES256_GCM_SHA384
                - TLS_CIPHER_SUITE_AES256_SHA
        hashicorp.consul.mesh.v1alpha1.pbproxystate.TLSParameters:
            type: object
            properties:
                cipher_suites:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TLSCipherSuite'
                max_version:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TLSVersion'
                min_version:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TLSVersion'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.TLSVersion:
            type: string
            enum:
                - TLS_VERSION_AUTO
                - TLS_VERSION_1_0
                - TLS_VERSION_1_1
                - TLS_VERSION_1_2
                - TLS_VERSION_1_3
                - TLS_VERSION_INVALID
                - TLS_VERSION_UNSPECIFIED
        hashicorp.consul.mesh.v1alpha1.pbproxystate.TimeoutConfig:
            type: object
            properties:
                idle_timeout:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                timeout:
                    type: string
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
        hashicorp.consul.mesh.v1alpha1.pbproxystate.TrafficPermissions:
            type: object
            properties:
                allow_permissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Permission'
                deny_permissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.Permission'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.TransportSocket:
            type: object
            properties:
                alpn_protocols:
                    type: array
                    items:
                        type: string
                inbound_mesh:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.InboundMeshMTLS'
                    description: |
                        // inbound_mesh is for incoming connections FROM the mesh.
                inbound_non_mesh:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.InboundNonMeshTLS'
                    description: |
                        // inbound_non_mesh is for incoming connections FROM non mesh.
                name:
                    type: string
                    description: |
                        // name of the transport socket
                outbound_mesh:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.OutboundMeshMTLS'
                    description: |
                        // outbound_mesh is for outbound connections TO mesh destinations.
                outbound_non_mesh:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.OutboundNonMeshTLS'
                    description: |
                        // outbound_non_mesh is for outbound connections TO non mesh destinations.
                tls_parameters:
                    $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.TLSParameters'
                    description: |
                        // tls_parameters can override any top level tls parameters that are configured.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.TrustBundle:
            type: object
            properties:
                roots:
                    type: array
                    items:
                        type: string
                trust_domain:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.TrustBundleRef:
            type: object
            properties:
                peer:
                    type: string
                trust_domain:
                    type: string
        hashicorp.consul.mesh.v1alpha1.pbproxystate.UnixSocketAddress:
            type: object
            properties:
                mode:
                    type: string
                    description: |
                        // mode is the Unix file mode for the socket file. It should be provided
                        // in the numeric notation, for example, "0600".
                path:
                    type: string
                    description: |
                        // path is the file system path at which to bind a Unix domain socket listener.
        hashicorp.consul.mesh.v1alpha1.pbproxystate.UpstreamConnectionOptions:
            type: object
            properties:
                tcp_keepalive_interval:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                tcp_keepalive_probes:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                tcp_keepalive_time:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.UpstreamLimits:
            type: object
            properties:
                max_concurrent_requests:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                max_connections:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
                max_pending_requests:
                    $ref: '#/components/schemas/google.protobuf.UInt32Value'
        hashicorp.consul.mesh.v1alpha1.pbproxystate.VirtualHost:
            type: object
            properties:
                domains:
                    type: array
                    items:
                        type: string
                    description: |
                        // domains are used to match an incoming request's host header and determine which virtual host to use.
                header_mutations:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.HeaderMutation'
                    description: |
                        // header_mutations to apply to the request when it matches this virtual host. These are applied after any headers in
                        // the RouteRule.
                name:
                    type: string
                route_rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.mesh.v1alpha1.pbproxystate.RouteRule'
                    description: |
                        // route_rules are a list of rules to use for what to do next with this request. The first rule with a match will be
                        // used.
        hashicorp.consul.resource.Condition:
            type: object
            properties:
                message:
                    type: string
                    description: |
                        // Message contains a human-friendly description of the status.
                reason:
                    type: string
                    description: |
                        // Reason provides more machine-readable details about the condition (e.g.
                        // "InvalidProtocol").
                resource:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Reference'
                    description: |
                        // Resource identifies which resource this condition relates to, when it is
                        // not the core resource itself.
                state:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Condition.State'
                    description: |
                        // State represents the state of the condition (i.e. true/false/unknown).
                type:
                    type: string
                    description: |
                        // Type identifies the type of condition (e.g. "Invalid", "ResolvedRefs").
            description: |4
                 Condition represents a discreet observation about a resource in relation to
                 the current state of the system.

                 It is heavily inspired by Kubernetes' [conditions](https://bit.ly/3H9Y6IK)
                 and the Gateway API [types and reasons](https://bit.ly/3n2PPiP).
        hashicorp.consul.resource.Condition.State:
            type: string
            enum:
                - STATE_UNKNOWN
                - STATE_TRUE
                - STATE_FALSE
            description: |4
                 State represents the state of the condition (i.e. true/false/unknown).
        hashicorp.consul.resource.ID:
            type: object
            properties:
                name:
                    type: string
                    description: |
                        // Name is the user-given name of the resource (e.g. the "billing" service).
                tenancy:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Tenancy'
                    description: |
                        // Tenancy identifies the tenancy units (i.e. partition, namespace) in which
                        // the resource resides.
                type:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Type'
                    description: |
                        // Type identifies the resource's type.
                uid:
                    type: string
                    description: |
                        // Uid is the unique internal identifier we gave to the resource.
                        //
                        // It is primarily used to tell the difference between the current resource
                        // and previous deleted resources with the same user-given name.
                        //
                        // Concretely, Uid is a [ULID](https://github.com/ulid/spec) and you can treat
                        // its timestamp component as the resource's creation time.
            description: |4
                 ID uniquely identifies a resource.
        hashicorp.consul.resource.Reference:
            type: object
            properties:
                name:
                    type: string
                    description: |
                        // Name is the user-given name of the resource (e.g. the "billing" service).
                section:
                    type: string
                    description: |
                        // Section identifies which part of the resource the condition relates to.
                tenancy:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Tenancy'
                    description: |
                        // Tenancy identifies the tenancy units (i.e. partition, namespace) in which
                        // the resource resides.
                type:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Type'
                    description: |
                        // Type identifies the resource's type.
            description: |4
                 Reference identifies which resource a condition relates to, when it is not
                 the core resource itself.
        hashicorp.consul.resource.Status:
            type: object
            properties:
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/hashicorp.consul.resource.Condition'
                    description: |
                        // Conditions contains a set of discreet observations about the resource in
                        // relation to the current state of the system (e.g. it is semantically valid).
                observed_generation:
                    type: string
                    description: |
                        // ObservedGeneration identifies which generation of a resource this status
                        // related to. It can be used to determine whether the current generation of
                        // a resource has been reconciled.
                updated_at:
                    type: string
                    format: date-time
                    description: |
                        // UpdatedAt is the time at which the status was last written.
            description: |4
                 Status is used by controllers to communicate the result of attempting to
                 reconcile and apply a resource (e.g. surface semantic validation errors)
                 with users and other controllers.
        hashicorp.consul.resource.Tenancy:
            type: object
            properties:
                namespace:
                    type: string
                    description: |
                        // Namespace further isolates resources within a partition.
                        // https://developer.hashicorp.com/consul/docs/enterprise/namespaces
                        //
                        // When using the List and WatchList endpoints, provide the wildcard value "*"
                        // to list resources across all namespaces.
                partition:
                    type: string
                    description: |
                        // Partition is the topmost administrative boundary within a cluster.
                        // https://developer.hashicorp.com/consul/docs/enterprise/admin-partitions
                        //
                        // When using the List and WatchList endpoints, provide the wildcard value "*"
                        // to list resources across all partitions.
                peer_name:
                    type: string
                    description: |
                        // PeerName identifies which peer the resource is imported from.
                        // https://developer.hashicorp.com/consul/docs/connect/cluster-peering
                        //
                        // When using the List and WatchList endpoints, provide the wildcard value "*"
                        // to list resources across all peers.
            description: |4
                 Tenancy describes the tenancy units in which the resource resides.
        hashicorp.consul.resource.Type:
            type: object
            properties:
                group:
                    type: string
                    description: |
                        // Group describes the area of functionality to which this resource type
                        // relates (e.g. "catalog", "authorization").
                group_version:
                    type: string
                    description: |
                        // GroupVersion is incremented when sweeping or backward-incompatible changes
                        // are made to the group's resource types.
                kind:
                    type: string
                    description: |
                        // Kind identifies the specific resource type within the group.
            description: |4
                 Type describes a resource's type. It follows the GVK (Group Version Kind)
                 [pattern](https://book.kubebuilder.io/cronjob-tutorial/gvks.html) established
                 by Kubernetes.
    parameters:
        consistent:
            name: consistent
            in: query
            description: When true, the operation will be performed with strong consistency
            schema:
                type: boolean
        name:
            name: name
            in: path
            description: The name of the resource to operate on.
            required: true
            schema:
                type: string
        name_prefix:
            name: name_prefix
            in: query
            description: The resource name prefix used to filter the result list.
            schema:
                type: string
        namespace:
            name: namespace
            in: query
            description: Specifies the Consul namespace of resources to operate on. This parameter takes precedence over the `ns` alias.
            schema:
                type: string
        ns:
            name: ns
            in: query
            description: '`ns` is an alias for the `namespace` query param. The `namespace` parameter takes precedence.'
            schema:
                type: string
        partition:
            name: partition
            in: query
            description: Specifies the Consul partition of resources to operate on.
            schema:
                type: string
        peer:
            name: peer
            in: query
            description: Specifies the Consul peer of imported resources to operate on.
            schema:
                type: string
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
        ConsulTokenHeader:
            type: apiKey
            in: header
            name: X-Consul-Token
security:
    - BearerAuth: []
    - ConsulTokenHeader: []
